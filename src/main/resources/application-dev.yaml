jwt.secret.key: hBkhevRQ2pgxN1TFpQetX9fgpeNC5sEQU
spring:
  config:
    activate:
      on-profile: dev
    import: optional:file:.env[.properties]
  data:
    redis:
      host: localhost
      port: 6379
  datasource:
    url: jdbc:postgresql://localhost:5432/rightbite
    username: postgres
    password: postgresql
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      highlight_sql: true
      use_sql_comments: true
  flyway:
    locations: classpath:db/migration
    enabled: true
    baseline-on-migrate: false
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  docker:
    compose:
      enabled: true
      lifecycle-management: start_and_stop
      profiles:
        active: dev
logging:
  level:
    root: INFO               # Основной уровень логирования
    com.best_store: DEBUG
    org.springframework.web: WARN
    org.hibernate.SQL: DEBUG        # SQL запросы (если нужно)
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE  # Значения параметров (если нужно)
    org.flywaydb.core: DEBUG
    org.springframework.boot.autoconfigure.flyway: DEBUG
    org.springframework.boot.autoconfigure.jdbc: DEBUG
